package io.sphere.sdk.annotations.generator.examples;

import io.sphere.sdk.models.Base;
import io.sphere.sdk.models.Builder;
import java.lang.String;
import java.lang.SuppressWarnings;

abstract class ExampleWithAbstractBaseClassDraftBuilderBase<T extends ExampleWithAbstractBaseClassDraftBuilderBase> extends Base implements Builder<ExampleWithAbstractBaseClassDraft> {
  protected String name;

  protected ExampleWithAbstractBaseClassDraftBuilderBase() {
  }

  protected ExampleWithAbstractBaseClassDraftBuilderBase(final String name) {
    this.name = name;
  }

  @SuppressWarnings("unchecked")
  public T name(final String name) {
    this.name = name;
    return (T) this;
  }

  public ExampleWithAbstractBaseClassDraftDsl build() {
    return new ExampleWithAbstractBaseClassDraftDsl(name);
  }

  public static ExampleWithAbstractBaseClassDraftBuilder of(final String name) {
    return new ExampleWithAbstractBaseClassDraftBuilder(name);
  }

  public static ExampleWithAbstractBaseClassDraftBuilder of(final ExampleWithAbstractBaseClassDraft template) {
    return new ExampleWithAbstractBaseClassDraftBuilder(template.getName());
  }
}
