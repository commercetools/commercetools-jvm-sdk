package io.sphere.sdk.annotations.processors.generators.examples;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.sphere.sdk.models.Base;
import java.lang.Boolean;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import javax.annotation.Generated;
import javax.annotation.Nullable;

/**
 * Abstract base dsl class for {@link ExampleDraftWithAbstractClass} which needs to be extended to add additional methods.
 * Subclasses have to provide the same non-default constructor as this class.
 */
@Generated(
    value = "io.sphere.sdk.annotations.processors.generators.ResourceDraftValueGenerator",
    comments = "Generated from: io.sphere.sdk.annotations.processors.generators.examples.ExampleDraftWithAbstractClass"
)
abstract class ExampleDraftWithAbstractClassDslBase<T extends ExampleDraftWithAbstractClassDslBase> extends Base implements ExampleDraftWithAbstractClass {
  private Boolean _default;

  private Boolean active;

  private List<String> names;

  @Nullable
  private String optional;

  private String sku;

  @JsonCreator
  ExampleDraftWithAbstractClassDslBase(@JsonProperty("isDefault") final Boolean _default,
      final Boolean active, final List<String> names, @Nullable final String optional,
      final String sku) {
    this._default = _default;
    this.active = active;
    this.names = names;
    this.optional = optional;
    this.sku = sku;
  }

  @JsonProperty("isDefault")
  public Boolean isDefault() {
    return _default;
  }

  public Boolean isActive() {
    return active;
  }

  public List<String> getNames() {
    return names;
  }

  @Nullable
  public String getOptional() {
    return optional;
  }

  public String getSku() {
    return sku;
  }

  /**
   * Creates a new builder with the values of this object.
   *
   * @return new builder
   */
  public ExampleDraftWithAbstractClassBuilder newBuilder() {
    return new ExampleDraftWithAbstractClassBuilder(_default, active, names, optional, sku);
  }

  @SuppressWarnings("unchecked")
  public T withDefault(final Boolean _default) {
    return (T) newBuilder()._default(_default).build();
  }

  @SuppressWarnings("unchecked")
  public T withActive(final Boolean active) {
    return (T) newBuilder().active(active).build();
  }

  @SuppressWarnings("unchecked")
  public T withNames(final List<String> names) {
    return (T) newBuilder().names(names).build();
  }

  @SuppressWarnings("unchecked")
  public T withOptional(@Nullable final String optional) {
    return (T) newBuilder().optional(optional).build();
  }

  @SuppressWarnings("unchecked")
  public T withSku(final String sku) {
    return (T) newBuilder().sku(sku).build();
  }

  @SuppressWarnings("unchecked")
  public T withIsDefault(final Boolean _default) {
    return (T) newBuilder()._default(_default).build();
  }

  /**
   * Creates a new object initialized with the given values.
   *
   * @param sku initial value for the {@link ExampleDraftWithAbstractClass#getSku()} property
   * @param active initial value for the {@link ExampleDraftWithAbstractClass#isActive()} property
   * @return new object initialized with the given values
   */
  public static ExampleDraftWithAbstractClassDsl of(final String sku, final Boolean active) {
    return new ExampleDraftWithAbstractClassDsl(null, active, null, null, sku);
  }

  /**
   * Creates a new object initialized with the given values.
   *
   * @param _default initial value for the {@link ExampleDraftWithAbstractClass#isDefault()} property
   * @param active initial value for the {@link ExampleDraftWithAbstractClass#isActive()} property
   * @return new object initialized with the given values
   */
  public static ExampleDraftWithAbstractClassDsl of(final Boolean _default, final Boolean active) {
    return new ExampleDraftWithAbstractClassDsl(_default, active, null, null, null);
  }

  /**
   * Creates a new object initialized with the given values.
   *
   * @param _default initial value for the {@link ExampleDraftWithAbstractClass#isDefault()} property
   * @param optional initial value for the {@link ExampleDraftWithAbstractClass#getOptional()} property
   * @return new object initialized with the given values
   */
  public static ExampleDraftWithAbstractClassDsl of(final Boolean _default,
      @Nullable final String optional) {
    return new ExampleDraftWithAbstractClassDsl(_default, null, null, optional, null);
  }

  /**
   * Creates a new object initialized with the fields of the template parameter.
   *
   * @param template the template
   * @return a new object initialized from the template
   */
  public static ExampleDraftWithAbstractClassDsl of(final ExampleDraftWithAbstractClass template) {
    return new ExampleDraftWithAbstractClassDsl(template.isDefault(), template.isActive(), template.getNames(), template.getOptional(), template.getSku());
  }
}
