package io.sphere.sdk.annotations.processors.generators.examples;

import io.sphere.sdk.models.Base;
import io.sphere.sdk.models.Builder;
import javax.annotation.Generated;

/**
 * Builder for {@link ExampleWithBuilderReturnsInterfaceDraft}.
 */
@Generated(
    value = "io.sphere.sdk.annotations.processors.generators.DraftBuilderGenerator",
    comments = "Generated from: io.sphere.sdk.annotations.processors.generators.examples.ExampleWithBuilderReturnsInterfaceDraft"
)
public final class ExampleWithBuilderReturnsInterfaceDraftBuilder extends Base implements Builder<ExampleWithBuilderReturnsInterfaceDraft> {
  ExampleWithBuilderReturnsInterfaceDraftBuilder() {
  }

  ExampleWithBuilderReturnsInterfaceDraftBuilder() {
  }

  /**
   * Creates a new instance of {@code ExampleWithBuilderReturnsInterfaceDraft} with the values of this builder.
   *
   * @return the instance
   */
  public ExampleWithBuilderReturnsInterfaceDraft build() {
    return new ExampleWithBuilderReturnsInterfaceDraftDsl();
  }

  /**
   * Creates a builder initialized with the given values.
   *
   * @return new builder initialized with the given values
   */
  public static ExampleWithBuilderReturnsInterfaceDraftBuilder of() {
    return new ExampleWithBuilderReturnsInterfaceDraftBuilder();
  }

  /**
   * Creates a builder initialized with the fields of the template parameter.
   *
   * @param template the template
   * @return a new builder initialized from the template
   */
  public static ExampleWithBuilderReturnsInterfaceDraftBuilder of(final ExampleWithBuilderReturnsInterfaceDraft template) {
    return new ExampleWithBuilderReturnsInterfaceDraftBuilder();
  }
}
